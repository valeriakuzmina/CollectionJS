// Задание 1
// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.

// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator. Каждый альбом имеет следующую структуру:

// {
// title: "Название альбома",
// artist: "Исполнитель",
// year: "Год выпуска"
// }

// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате: Название альбома - Исполнитель (Год выпуска)

const musicCollection = [
  { title: "1", artist: "Vasya", year: "1998" },
  { title: "2", artist: "Retta", year: "2021" },
  { title: "3", artist: "Petya", year: "2000" },
  { title: "4", artist: "Maria", year: "1965" },
];

musicCollection[Symbol.iterator] = function () {
  return {
    current: 0,
    to: this.length,
    next() {
      return this.current < this.to
        ? { done: false, value: musicCollection[this.current++] }
        : { done: true };
    },
  };
};

for (let music of musicCollection) {
  console.log(
    `Название альбома ${music.title}, Исполнитель ${music.artist}, Год выпуска ${music.year}`
  );
}

// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

const cook = new Map();

cook.set("Виктор", "Пицца");
cook.set("Ольга", "Суши");
cook.set("Дмитрий", "Дусерты");

const dishes = new Map();
dishes.set("Маргарита", "Виктор");
dishes.set("Пепперони", "Виктор");
dishes.set("Филадельфия", "Ольга");
dishes.set("Калифорния", "Ольга");
dishes.set("Тирамису", "Дмитрий");
dishes.set("Чизкейк", "Дмитрий");

// Создаем Map для хранения заказов клиентов
const orders = new Map();
orders.set({ name: "Алексей" }, ["Пепперони", "Тирамису"]);
orders.set({ name: "Мария" }, ["Калифорния", "Маргарита"]);
orders.set({ name: "Ирина" }, ["Чизкейк"]);

for (let [client, clientOrders] of orders) {
  let orderDetails = clientOrders
    .map((dish) => `${dish}`) // принимает название блюда и выводит его
    .join(" и "); // вывод через И 
  console.log(`Клиент ${client.name} заказал: ${orderDetails}`);
}

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.
